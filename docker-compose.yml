services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: constelar
      POSTGRES_USER: constelar
      POSTGRES_PASSWORD: constelar
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U constelar"]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "18025:8025"   # UI

  # ðŸ‘‡ Servicio one-shot que corre Alembic y sale
  migrate:
    build: ./backend
    environment:
      DATABASE_URL: postgresql+psycopg2://constelar:constelar@db:5432/constelar
      # â–¼ las siguientes son necesarias porque settings las valida al importar
      REDIS_URL: redis://redis:6379/0
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USER: ""
      SMTP_PASS: ""
      MAIL_FROM: no-reply@constelar.app
      FRONTEND_BASE_URL: http://localhost:8080
      ACCESS_TTL_MIN: 15
      REFRESH_TTL_DAYS: 7
      COOKIE_SECURE: "false"
      ALLOWED_ORIGINS: http://localhost:8080,http://127.0.0.1:8080
      APP_ENV: dev
      JWT_SECRET: super-secreto-cambiar
      JWT_ALG: HS256
    depends_on:
      db:
        condition: service_healthy
    command: >
      bash -lc "alembic -c /app/alembic.ini upgrade head"
    restart: "no"


  api:
    build: ./backend
    environment:
      DATABASE_URL: postgresql+psycopg2://constelar:constelar@db:5432/constelar
      REDIS_URL: redis://redis:6379/0
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USER: ""
      SMTP_PASS: ""
      MAIL_FROM: no-reply@constelar.app
      FRONTEND_BASE_URL: http://localhost:8080
      ACCESS_TTL_MIN: 15
      REFRESH_TTL_DAYS: 7
      COOKIE_SECURE: "false"
      ALLOWED_ORIGINS: http://localhost:8080,http://127.0.0.1:8080
      APP_ENV: dev
      JWT_SECRET: super-secreto-cambiar
      JWT_ALG: HS256
    ports: ["8000:8000"]
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
      mailhog:
        condition: service_started
    # Arranca directo (sin Alembic aquÃ­)
    command: >
      bash -lc "
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 15s
      timeout: 3s
      retries: 10

  web:
    build:
      context: ./frontend
      args:
        VITE_API_URL: "http://api:8000"
    ports: ["8080:80"]
    depends_on:
      api:
        condition: service_healthy
